#
# mod_proxy module configuare file
#
# mod_proxy and related moduels implement a proxy/gateway for apache HTTP server,
# supporting a number of popular as well as serveral different load balancing algorithms.

# proxyRequests Directive
# - Description : Enables forward (standard) proxy requests
# - Syntax      : ProxyRequests On|Off                                                   
# - Default     : Off                                                                    
# - Context     : server config, virtual host                                           
# - Module      : mod_proxy                                                              
#                                                                                       
# This allows or prevents Apache httpd from functioning as a forward proxy server        
# (setting ProxyRequeststo off does not disable use of the ProxyPass directive)          
#                                                                                         
# In typical reverse proxy or gateway configuration, this option should be set to off    
#                                                                                        
# In order to get the functionality of proxying HTTP or FTP site, you need also         
# 'mod_proxy_http' or 'mod_proxy_ftp'(or both) present in the server                    
#                                                                                        
# In order to get the functionality of (forward) proxying HTTPS site, you need           
# 'mod_proxy_connect' enable in the server                                               
#                                                                                       
ProxyRequests Off 

# ProxyPreserveHost                                                                             
#  - Description : Use incoming Host HTTP request header for proxy request               
#  - Syntax      : ProxyPreserveHost On|Off                                              
#  - Default     : ProxyPreserveHost Off                                                 
#  - Context     : server config, virtual host, directory                                
#  - Module      : mod_proxy                                                             
#  - Compatinility : Usable in directory context in 2.3.3 and later                     
#                                                                                        
#  When enabled, this option will pass the Host: line from the incoming request to the   
#  proxied host, instead of the hostname specified in the ProxyPass line.                
#                                                                                        
#  This option should normally be turned off.                                            
#  It is mostly useful in speical configurations like proxied                            
#  mass name-based virtual hosting. where the original Host header need to be evaluated  
#  by the backend server.                                                                
#                                                                                        
ProxyPreserveHost On

# ProxyPass Directive                                                                    
# - Description : Maps remote servers into the local server URL-space                    
# - Syntax      : ProxyPass [path] ! url [key=value [key=value...]] [nocanon][interpolate][noquery] 
# - Context     : server config, virtual host, directory                                 
# - Module      : mod_proxy                                                              
# - Compatibility : Unix Domain Socket(USD) support added in 2.4.7                        
#                                                                                        
# The ProxyRequests directive should usually be set off when using ProxyPass             
ProxyPass /balancer-manager !
ProxyPass /server-status !

# Proxy Balancer 
#
# PARAMETER           DEFAULT          DESC 
# lbmethod         byrequests       byrequests : perform weighted request counting
#                                   bytraffic  : perform weighted traffic byte count 
#                                   bybusyness : pending request balancing  
#
# maxattempts      One less than    maximum number of failover attempts before giving up
#                  the number of   
#                  worker or 
#                  1 with a 
#                  single worker. 
#
# nofailover           Off          If set to On, session will break if the worker is in error or disable.(no support session replication)        
#
# stickysession         -           Balancer session name. if use another for cookies 
#                                   and url encoded use | to separate them. 
#
# sticksessionsep     "."           Set the separation symbol in the session cookie. Some backend 
#                                   application servers do not use the '.' as the symbol
#                                   the setting of 'Off' signifies no symbol is used. 
#
# scolonpathdelim     Off           If set to On, the semi-colon character ';' will be used as an additional sticky session delimiter/separator. 
#
# timeout              0            Balancer timeout in seconds. if set this will be the maximum time to wait for a free worker. 
#
# forcerecovery     On             Force the immediate recovery of all workers without considering the retry parameter of the workers if all workers of a balancer are in error state. 
# 
# Reference : https://httpd.apache.org/docs/2.4/mod/mod_proxy.html#proxypass
#


# ProxySet 
# - Description : Set various Proxy balancer or member parameters
# - Syntax      : ProxySet url key=value [key=value ...] 
# - Context     : directory
# - Module      : mod_proxy 
# - Compatibility : Apache HTTP Server 2.2 and later
#
# This directive is used as an alternate method of setting any of the parameter available to proxy 
# balancers and workers done via the ProxyPass directive. if used within a <Proxy Balancer url | worker url> container directive, the url argument is not required. As a side effect the respective 
# balancer or workers get created. Thi can be useful when doing reverse proxying via a RewriteRule 
# instead of a ProxyPass directive


ProxyPass / balancer://examplecluster/
ProxyPass / balancer://examplecluster/ stickysession=JSESSIONID|jsessionid nofailover=Off

<Proxy balancer://examplecluster/>
	BalancerMember ajp://127.0.0.1:8009 route=test1 loadfactor=1 redirect=test3 timeout=15 retry=300
  	BalancerMember ajp://127.0.0.1:8109 route=test3 loadfactor=1 redirect=test1 timeout=15 retry=300
	ProxySet lbmethod=byrequests
	ProxySet stickysession=JSESSIONID
</Proxy> 

# ProxyPassMatch 
# - Description : Maps remote server into the local server URL-space using regex
# - Syntax      : ProxyPassMatch [regex] !|url [key=value [key=value ...]]
# - Context     : server config, virtual host, directory  
# - Module      : mod_proxy 
#
# This directive is equivalent to "ProxyPass" but makes use of regular expressions instead of simple prefix matching. 
#
# Suppose the local server has address http://example.com; then
#  
#  ProxyPassMatch "^/(.*\.gif)$" "http://backend.example.com/$1" 
#
ProxyPassMatch ^(/.*)$ balancer://examplecluster$1


#ProxyPassReverse / ajp://127.0.0.1:8009/
#ProxyPassReverse / ajp://127.0.0.1:8019/
#ProxyPassReverse / ajp://127.0.0.1:8029/
#ProxyPassReverseCookieDomain 127.0.0.1 localhost


<Location "/balancer-manager">
	SetHandler balancer-manager
    Order deny,allow
    Deny from all
    # Allow from local subnet only
    Allow from all
</Location>

<Location /server-status>
	SetHandler server-status
	Order Deny,Allow
	Deny from all
    Allow from all
</Location>


#<VirtualHost subdomain.mydomain.com:80>
#    ProxyPass / http://localhost:8080/application1/
#    ProxyPassMatch ^/(.*)$ ajp://mydomain.com:8080/application1/$1
#    ProxyPassReverse / http://localhost:8080/application1/
#</VirtualHost>

#<VirtualHost mydomain.com:80>
#    ProxyPass / http://localhost:8080/application1/
#    ProxyPassMatch ^/(.*)$ ajp://mydomain.com:8080/application2/$1
#    ProxyPassReverse / http://localhost:8080/application1/
#</VirtualHost>
